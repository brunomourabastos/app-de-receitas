{"ast":null,"code":"var _jsxFileName = \"/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/pages/FoodDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport RecomendationCards from '../cards/RecomendationCards';\nimport ShareAndFav from '../components/ShareAndFav';\nimport './FixedButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FoodDetails() {\n  _s();\n\n  const [food, setFood] = useState('');\n  const location = useLocation();\n  const history = useHistory();\n  const {\n    pathname\n  } = location;\n  const idNumber = pathname.split('foods/')[1];\n  useEffect(() => {\n    const fetchById = async () => {\n      const url = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${idNumber}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setFood(data.meals);\n    };\n\n    fetchById();\n  }, [idNumber]);\n\n  if (food.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n  const ingredients = Object.values(Object.fromEntries(Object.entries(food[0]).filter(_ref => {\n    let [key] = _ref;\n    return key.includes('Ingredient');\n  }))).filter(e => e !== null);\n  const measures = Object.values(Object.fromEntries(Object.entries(food[0]).filter(_ref2 => {\n    let [key] = _ref2;\n    return key.includes('Measure');\n  }))).filter(e => e !== null);\n  const totalIngredients = ingredients.map((element, index) => measures[index] ? element.concat(` - ${measures[index]}`) : element);\n\n  const redirectInProgress = () => {\n    history.push(`${pathname}/in-progress`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      width: 360,\n      \"data-testid\": \"recipe-photo\",\n      src: food[0].strMealThumb,\n      alt: \"ilustra\\xE7\\xE3o da receita\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      \"data-testid\": \"recipe-title\",\n      children: food[0].strMeal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      \"data-testid\": \"recipe-category\",\n      children: food[0].strCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShareAndFav, {\n      actualFood: food\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), totalIngredients.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": `${index}-ingredient-name-and-measure`,\n        children: element\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Instructions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      \"data-testid\": \"instructions\",\n      children: food[0].strInstructions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: food[0].strYoutube\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      \"data-testid\": \"video\",\n      src: `https://www.youtube.com/embed/${food[0].strYoutube.split('v=')[1]}`,\n      allow: \"encrypted-media\",\n      title: \"video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecomendationCards, {\n      type: \"food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: redirectInProgress,\n      \"data-testid\": \"start-recipe-btn\",\n      className: \"start-recipe-button\",\n      children: \"Start Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n} // Explicação para utilização do embed no lugar do watch, tendo que fazer o split para pegar somente o id do vídeo\n// https://stackoverflow.com/questions/25661182/embed-youtube-video-refused-to-display-in-a-frame-because-it-set-x-frame-opti\n\n\n_s(FoodDetails, \"oVTt3a9pZ1s/HwhhvZw3EiEzcMo=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = FoodDetails;\nexport default FoodDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodDetails\");","map":{"version":3,"sources":["/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/pages/FoodDetails.jsx"],"names":["React","useEffect","useState","Button","useLocation","useHistory","RecomendationCards","ShareAndFav","FoodDetails","food","setFood","location","history","pathname","idNumber","split","fetchById","url","response","fetch","data","json","meals","length","ingredients","Object","values","fromEntries","entries","filter","key","includes","e","measures","totalIngredients","map","element","index","concat","redirectInProgress","push","strMealThumb","strMeal","strCategory","strInstructions","strYoutube"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport RecomendationCards from '../cards/RecomendationCards';\nimport ShareAndFav from '../components/ShareAndFav';\nimport './FixedButton.css';\n\nfunction FoodDetails() {\n  const [food, setFood] = useState('');\n  const location = useLocation();\n  const history = useHistory();\n  const { pathname } = location;\n  const idNumber = pathname.split('foods/')[1];\n\n  useEffect(() => {\n    const fetchById = async () => {\n      const url = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${idNumber}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setFood(data.meals);\n    };\n    fetchById();\n  }, [idNumber]);\n\n  if (food.length === 0) {\n    return (<div>Carregando...</div>);\n  }\n\n  const ingredients = Object.values(Object.fromEntries(Object.entries(food[0])\n    .filter(([key]) => key.includes('Ingredient')))).filter((e) => e !== null);\n\n  const measures = Object.values(Object.fromEntries(Object.entries(food[0])\n    .filter(([key]) => key.includes('Measure')))).filter((e) => e !== null);\n\n  const totalIngredients = ingredients\n    .map((element, index) => (\n      measures[index]\n        ? element.concat(` - ${measures[index]}`)\n        : element\n    ));\n\n  const redirectInProgress = () => {\n    history.push(`${pathname}/in-progress`);\n  };\n\n  return (\n    <div>\n      <img\n        width={ 360 }\n        data-testid=\"recipe-photo\"\n        src={ food[0].strMealThumb }\n        alt=\"ilustração da receita\"\n      />\n      <h1 data-testid=\"recipe-title\">\n        {food[0].strMeal}\n      </h1>\n      <p data-testid=\"recipe-category\">{food[0].strCategory}</p>\n      <ShareAndFav actualFood={ food } />\n      <h3>Ingredients</h3>\n      {totalIngredients.map((element, index) => (\n        <div key={ index }>\n          <p data-testid={ `${index}-ingredient-name-and-measure` }>{element}</p>\n        </div>\n      ))}\n      <h3>Instructions</h3>\n      <p data-testid=\"instructions\">{food[0].strInstructions}</p>\n      <h3>Video</h3>\n      <p>{food[0].strYoutube}</p>\n      <iframe\n        data-testid=\"video\"\n        src={ `https://www.youtube.com/embed/${food[0].strYoutube.split('v=')[1]}` }\n        allow=\"encrypted-media\"\n        title=\"video\"\n      />\n      <RecomendationCards type=\"food\" />\n      <Button\n        onClick={ redirectInProgress }\n        data-testid=\"start-recipe-btn\"\n        className=\"start-recipe-button\"\n      >\n        Start Recipe\n\n      </Button>\n    </div>\n\n  );\n}\n\n// Explicação para utilização do embed no lugar do watch, tendo que fazer o split para pegar somente o id do vídeo\n// https://stackoverflow.com/questions/25661182/embed-youtube-video-refused-to-display-in-a-frame-because-it-set-x-frame-opti\nexport default FoodDetails;\n"]},"metadata":{},"sourceType":"module"}