{"ast":null,"code":"var _jsxFileName = \"/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/components/ShareAndFav.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ShareIcon from '../images/shareIcon.svg';\nimport WhiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport BlackHeartIcon from '../images/blackHeartIcon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShareAndFav(_ref) {\n  _s();\n\n  let {\n    actualFood: food,\n    typeOfCard\n  } = _ref;\n  const [linkCopied, setLinkCopied] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  useEffect(() => {\n    console.log('ativo quando clico no coração');\n  }, [isFavorite]);\n\n  const copyToClipboard = async () => {\n    await navigator.clipboard.writeText(`${window.location}`);\n    setLinkCopied(true);\n  };\n\n  const isFavoriteRecipe = recipe => {\n    const recipeList = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (recipeList) return recipeList.find(item => item.id === recipe.id);\n    return false;\n  };\n\n  let actualState = {};\n\n  if (typeOfCard === 'food') {\n    const {\n      idMeal: id,\n      strCategory: type,\n      strArea: nationality,\n      strCategory: category,\n      strMeal: name,\n      strMealThumb: image\n    } = food[0];\n    actualState = {\n      id,\n      type,\n      nationality,\n      category,\n      name,\n      image\n    };\n  }\n\n  const {\n    idDrink: id,\n    strCategory: type,\n    strArea: nationality,\n    strCategory: category,\n    strDrink: name,\n    strDrinkThumb: image\n  } = food[0];\n  actualState = {\n    id,\n    type,\n    nationality,\n    category,\n    name,\n    image\n  };\n\n  const addToFavoriteRecipeState = () => {\n    const recipeList = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    let newList = [];\n\n    if (recipeList) {\n      newList = recipeList.find(item => item.id === actualState.id) ? recipeList.filter(item => item.id !== actualState.id) : [...recipeList, actualState];\n    } else {\n      newList = [actualState];\n    }\n\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newList));\n    setIsFavorite(!isFavorite);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      \"data-testid\": \"recipe-category\",\n      children: food[0].strCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), linkCopied ? 'Link copied!' : /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: copyToClipboard,\n      \"data-testid\": \"share-btn\",\n      type: \"image\",\n      src: ShareIcon,\n      alt: \"\\xEDcone de compartilhamento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: addToFavoriteRecipeState,\n      \"data-testid\": \"favorite-btn\",\n      type: \"image\",\n      src: isFavoriteRecipe(food) ? BlackHeartIcon : WhiteHeartIcon,\n      alt: \"\\xEDcone de cora\\xE7\\xE3o para favoritar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShareAndFav, \"NnJ5o4DEB3KOOjdi4rAUSwTGJck=\");\n\n_c = ShareAndFav;\nexport default ShareAndFav;\nShareAndFav.propTypes = {\n  food: PropTypes.string\n}.isRequired;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShareAndFav\");","map":{"version":3,"sources":["/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/components/ShareAndFav.jsx"],"names":["React","useEffect","useState","PropTypes","ShareIcon","WhiteHeartIcon","BlackHeartIcon","ShareAndFav","actualFood","food","typeOfCard","linkCopied","setLinkCopied","isFavorite","setIsFavorite","console","log","copyToClipboard","navigator","clipboard","writeText","window","location","isFavoriteRecipe","recipe","recipeList","JSON","parse","localStorage","getItem","find","item","id","actualState","idMeal","strCategory","type","strArea","nationality","category","strMeal","name","strMealThumb","image","idDrink","strDrink","strDrinkThumb","addToFavoriteRecipeState","newList","filter","setItem","stringify","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ShareIcon from '../images/shareIcon.svg';\nimport WhiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport BlackHeartIcon from '../images/blackHeartIcon.svg';\n\nfunction ShareAndFav({ actualFood: food, typeOfCard }) {\n  const [linkCopied, setLinkCopied] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  useEffect(() => {\n    console.log('ativo quando clico no coração');\n  }, [isFavorite]);\n\n  const copyToClipboard = async () => {\n    await navigator.clipboard.writeText(`${window.location}`);\n    setLinkCopied(true);\n  };\n\n  const isFavoriteRecipe = (recipe) => {\n    const recipeList = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (recipeList) return recipeList.find((item) => item.id === recipe.id);\n    return false;\n  };\n\n  let actualState = {};\n  if (typeOfCard === 'food') {\n    const { idMeal: id,\n      strCategory: type,\n      strArea: nationality,\n      strCategory: category,\n      strMeal: name, strMealThumb: image } = food[0];\n    actualState = { id, type, nationality, category, name, image };\n  }\n  const { idDrink: id,\n    strCategory: type,\n    strArea: nationality,\n    strCategory: category,\n    strDrink: name, strDrinkThumb: image } = food[0];\n  actualState = { id, type, nationality, category, name, image };\n\n  const addToFavoriteRecipeState = () => {\n    const recipeList = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    let newList = [];\n    if (recipeList) {\n      newList = recipeList.find((item) => item.id === actualState.id)\n        ? recipeList.filter((item) => item.id !== actualState.id)\n        : [...recipeList, actualState];\n    } else {\n      newList = [actualState];\n    }\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newList));\n    setIsFavorite(!isFavorite);\n  };\n\n  return (\n    <div>\n      <p data-testid=\"recipe-category\">{food[0].strCategory}</p>\n      {linkCopied ? 'Link copied!'\n        : (\n          <input\n            onClick={ copyToClipboard }\n            data-testid=\"share-btn\"\n            type=\"image\"\n            src={ ShareIcon }\n            alt=\"ícone de compartilhamento\"\n          />)}\n      <input\n        onClick={ addToFavoriteRecipeState }\n        data-testid=\"favorite-btn\"\n        type=\"image\"\n        src={ isFavoriteRecipe(food) ? BlackHeartIcon : WhiteHeartIcon }\n        alt=\"ícone de coração para favoritar\"\n      />\n    </div>\n  );\n}\n\nexport default ShareAndFav;\n\nShareAndFav.propTypes = {\n  food: PropTypes.string,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}