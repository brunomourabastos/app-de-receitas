{"ast":null,"code":"var _jsxFileName = \"/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/cards/RecomendationCards.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from '../context/MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RecomendationCards(_ref) {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  let recomendation = [];\n  const {\n    allFood,\n    allDrink\n  } = useContext(MyContext);\n  const MAX_LENGTH = 6;\n\n  if (allFood.length > MAX_LENGTH || allDrink.length > MAX_LENGTH) {\n    allFood.length = 6;\n    allDrink.length = 6;\n  }\n\n  if (type === 'drink') {\n    recomendation = allFood;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: recomendation.map((_ref2, index) => {\n        let {\n          strCategory\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": `${index}-recomendation-card`,\n          children: strCategory\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false);\n  }\n\n  recomendation = allDrink;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: recomendation.map((_ref3, index) => {\n      let {\n        strAlcoholic,\n        strDrinkThumb,\n        strMeal\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": `${index}-recomendation-card`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: strDrinkThumb,\n          alt: strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), strAlcoholic]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(RecomendationCards, \"7x3/fW7JUTU6bCAeNzmY0qMYy4Q=\");\n\n_c = RecomendationCards;\nexport default RecomendationCards;\nRecomendationCards.propTypes = {\n  type: PropTypes.string\n}.isRequired;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecomendationCards\");","map":{"version":3,"sources":["/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/cards/RecomendationCards.jsx"],"names":["React","useContext","PropTypes","MyContext","RecomendationCards","type","recomendation","allFood","allDrink","MAX_LENGTH","length","map","index","strCategory","strAlcoholic","strDrinkThumb","strMeal","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;;;AAEA,SAASC,kBAAT,OAAsC;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACpC,MAAIC,aAAa,GAAG,EAApB;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBP,UAAU,CAACE,SAAD,CAAxC;AACA,QAAMM,UAAU,GAAG,CAAnB;;AAEA,MAAIF,OAAO,CAACG,MAAR,GAAiBD,UAAjB,IAA+BD,QAAQ,CAACE,MAAT,GAAkBD,UAArD,EAAiE;AAC/DF,IAAAA,OAAO,CAACG,MAAR,GAAiB,CAAjB;AACAF,IAAAA,QAAQ,CAACE,MAAT,GAAkB,CAAlB;AACD;;AAED,MAAIL,IAAI,KAAK,OAAb,EAAsB;AACpBC,IAAAA,aAAa,GAAGC,OAAhB;AACA,wBACE;AAAA,gBACGD,aAAa,CAACK,GAAd,CAAkB,QAAkBC,KAAlB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,4BACjB;AACE,yBAAe,GAAED,KAAM,qBADzB;AAAA,oBAIGC;AAJH,WAEQD,KAFR;AAAA;AAAA;AAAA;AAAA,gBADiB;AAAA,OAAlB;AADH,qBADF;AAeD;;AACDN,EAAAA,aAAa,GAAGE,QAAhB;AACA,sBACE;AAAA,cAEGF,aAAa,CAACK,GAAd,CAAkB,QAA2CC,KAA3C;AAAA,UAAC;AAAEE,QAAAA,YAAF;AAAgBC,QAAAA,aAAhB;AAA+BC,QAAAA;AAA/B,OAAD;AAAA,0BACjB;AACE,uBAAe,GAAEJ,KAAM,qBADzB;AAAA,gCAIE;AAAK,UAAA,GAAG,EAAGG,aAAX;AAA2B,UAAA,GAAG,EAAGC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKGF,YALH;AAAA,SAEQF,KAFR;AAAA;AAAA;AAAA;AAAA,cADiB;AAAA,KAAlB;AAFH,mBADF;AAgBD;;GA7CQR,kB;;KAAAA,kB;AA+CT,eAAeA,kBAAf;AAEAA,kBAAkB,CAACa,SAAnB,GAA+B;AAC7BZ,EAAAA,IAAI,EAAEH,SAAS,CAACgB;AADa,EAE7BC,UAFF","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from '../context/MyContext';\n\nfunction RecomendationCards({ type }) {\n  let recomendation = [];\n  const { allFood, allDrink } = useContext(MyContext);\n  const MAX_LENGTH = 6;\n\n  if (allFood.length > MAX_LENGTH || allDrink.length > MAX_LENGTH) {\n    allFood.length = 6;\n    allDrink.length = 6;\n  }\n\n  if (type === 'drink') {\n    recomendation = allFood;\n    return (\n      <>\n        {recomendation.map(({ strCategory }, index) => (\n          <div\n            data-testid={ `${index}-recomendation-card` }\n            key={ index }\n          >\n            {strCategory}\n\n          </div>\n\n        ))}\n      </>\n\n    );\n  }\n  recomendation = allDrink;\n  return (\n    <>\n\n      {recomendation.map(({ strAlcoholic, strDrinkThumb, strMeal }, index) => (\n        <div\n          data-testid={ `${index}-recomendation-card` }\n          key={ index }\n        >\n          <img src={ strDrinkThumb } alt={ strMeal } />\n          {strAlcoholic}\n        </div>\n\n      ))}\n\n    </>\n  );\n}\n\nexport default RecomendationCards;\n\nRecomendationCards.propTypes = {\n  type: PropTypes.string,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}