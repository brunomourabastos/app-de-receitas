{"ast":null,"code":"var _jsxFileName = \"/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/cards/RecomendationCards.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from '../context/MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RecomendationCards(_ref) {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  let recomendation = [];\n  const {\n    allFood,\n    allDrink\n  } = useContext(MyContext);\n  const MAX_LENGTH = 6;\n\n  if (allFood.length > MAX_LENGTH || allDrink.length > MAX_LENGTH) {\n    allFood.length = 6;\n    allDrink.length = 6;\n  }\n\n  if (type === 'drink') {\n    recomendation = allFood;\n  } else {\n    recomendation = allDrink;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"type === 'drink' ? recomendation.map((\", (strCategory, strMealThumb), \", index) => (\", /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": `${index}-recomendation-card`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: strMealThumb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), strCategory]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), \"))\"]\n  }, void 0, true);\n}\n\n_s(RecomendationCards, \"7x3/fW7JUTU6bCAeNzmY0qMYy4Q=\");\n\n_c = RecomendationCards;\nexport default RecomendationCards;\nRecomendationCards.propTypes = {\n  type: PropTypes.string\n}.isRequired;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecomendationCards\");","map":{"version":3,"sources":["/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/cards/RecomendationCards.jsx"],"names":["React","useContext","PropTypes","MyContext","RecomendationCards","type","recomendation","allFood","allDrink","MAX_LENGTH","length","strCategory","strMealThumb","index","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;;;AAEA,SAASC,kBAAT,OAAsC;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACpC,MAAIC,aAAa,GAAG,EAApB;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBP,UAAU,CAACE,SAAD,CAAxC;AACA,QAAMM,UAAU,GAAG,CAAnB;;AAEA,MAAIF,OAAO,CAACG,MAAR,GAAiBD,UAAjB,IAA+BD,QAAQ,CAACE,MAAT,GAAkBD,UAArD,EAAiE;AAC/DF,IAAAA,OAAO,CAACG,MAAR,GAAiB,CAAjB;AACAF,IAAAA,QAAQ,CAACE,MAAT,GAAkB,CAAlB;AACD;;AAED,MAAIL,IAAI,KAAK,OAAb,EAAsB;AACpBC,IAAAA,aAAa,GAAGC,OAAhB;AACD,GAFD,MAEO;AACLD,IAAAA,aAAa,GAAGE,QAAhB;AACD;;AAED,sBACE;AAAA,0DAGIG,WAAW,EAAEC,YAHjB,iCAKE;AACE,qBAAe,GAAEC,KAAM,qBADzB;AAAA,8BAIE;AAAK,QAAA,GAAG,EAAGD;AAAX;AAAA;AAAA;AAAA;AAAA,cAJF,EAKGD,WALH;AAAA,OAEQE,KAFR;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAkBD;;GAlCQT,kB;;KAAAA,kB;AAoCT,eAAeA,kBAAf;AAEAA,kBAAkB,CAACU,SAAnB,GAA+B;AAC7BT,EAAAA,IAAI,EAAEH,SAAS,CAACa;AADa,EAE7BC,UAFF","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from '../context/MyContext';\n\nfunction RecomendationCards({ type }) {\n  let recomendation = [];\n  const { allFood, allDrink } = useContext(MyContext);\n  const MAX_LENGTH = 6;\n\n  if (allFood.length > MAX_LENGTH || allDrink.length > MAX_LENGTH) {\n    allFood.length = 6;\n    allDrink.length = 6;\n  }\n\n  if (type === 'drink') {\n    recomendation = allFood;\n  } else {\n    recomendation = allDrink;\n  }\n\n  return (\n    <>\n\n      type === 'drink' ? recomendation.map((\n      { strCategory, strMealThumb }\n      , index) => (\n      <div\n        data-testid={ `${index}-recomendation-card` }\n        key={ index }\n      >\n        <img src={ strMealThumb } />\n        {strCategory}\n\n      </div>\n      ))\n\n    </>\n  );\n}\n\nexport default RecomendationCards;\n\nRecomendationCards.propTypes = {\n  type: PropTypes.string,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}