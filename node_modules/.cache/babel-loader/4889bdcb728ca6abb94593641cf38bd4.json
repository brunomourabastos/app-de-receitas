{"ast":null,"code":"var _jsxFileName = \"/Users/brunobastos/bruno/github-projects/app-de-receitas/app-de-receitas/src/components/ShareAndFavDrink.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ShareIcon from '../images/shareIcon.svg';\nimport WhiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport BlackHeartIcon from '../images/blackHeartIcon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShareAndFavDrink(_ref) {\n  _s();\n\n  let {\n    actualFood: food\n  } = _ref;\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [linkCopied, setLinkCopied] = useState(false);\n\n  const isFavorited = () => {\n    const {\n      idDrink: id,\n      strCategory: category,\n      strAlcoholic: alcoholicOrNot,\n      strDrink: name,\n      strDrinkThumb: image\n    } = food[0];\n    const actualState = {\n      id,\n      type: 'drink',\n      nationality: '',\n      alcoholicOrNot,\n      category,\n      name,\n      image\n    };\n    const recipeListOne = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    if (recipeListOne) {\n      if (recipeListOne.find(elemento => elemento.id === actualState.id) !== undefined) {\n        setIsFavorite(true);\n      }\n    } else {\n      setIsFavorite(false);\n    }\n  };\n\n  useEffect(() => {\n    isFavorited();\n  }, []);\n\n  const copyToClipboard = async () => {\n    await navigator.clipboard.writeText(`${window.location}`.split('/in-progress')[0]);\n    setLinkCopied(true);\n  };\n\n  const addToFavoriteRecipeState = () => {\n    const {\n      idDrink: id,\n      strCategory: category,\n      strAlcoholic: alcoholicOrNot,\n      strDrink: name,\n      strDrinkThumb: image\n    } = food[0];\n    const actualState = {\n      id,\n      type: 'drink',\n      nationality: '',\n      alcoholicOrNot,\n      category,\n      name,\n      image\n    };\n    const recipeList = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    let newList = [];\n\n    if (recipeList) {\n      newList = recipeList.find(item => item.id === actualState.id) ? recipeList.filter(item => item.id !== actualState.id) : [...recipeList, actualState];\n    } else {\n      newList = [actualState];\n    }\n\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newList));\n    setIsFavorite(!isFavorite);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [linkCopied ? 'Link copied!' : /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: copyToClipboard,\n      \"data-testid\": \"share-btn\",\n      type: \"image\",\n      src: ShareIcon,\n      alt: \"\\xEDcone de compartilhamento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: addToFavoriteRecipeState,\n      \"data-testid\": \"favorite-btn\",\n      type: \"image\",\n      src: isFavorite ? BlackHeartIcon : WhiteHeartIcon,\n      alt: \"\\xEDcone de cora\\xE7\\xE3o para favoritar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShareAndFavDrink, \"vceni7cHUlM94iur36QADUCge4w=\");\n\n_c = ShareAndFavDrink;\nexport default ShareAndFavDrink;\nShareAndFavDrink.propTypes = {\n  recipeContent: PropTypes.string\n}.isRequired;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShareAndFavDrink\");","map":{"version":3,"sources":["/Users/brunobastos/bruno/github-projects/app-de-receitas/app-de-receitas/src/components/ShareAndFavDrink.jsx"],"names":["React","useEffect","useState","PropTypes","ShareIcon","WhiteHeartIcon","BlackHeartIcon","ShareAndFavDrink","actualFood","food","isFavorite","setIsFavorite","linkCopied","setLinkCopied","isFavorited","idDrink","id","strCategory","category","strAlcoholic","alcoholicOrNot","strDrink","name","strDrinkThumb","image","actualState","type","nationality","recipeListOne","JSON","parse","localStorage","getItem","find","elemento","undefined","copyToClipboard","navigator","clipboard","writeText","window","location","split","addToFavoriteRecipeState","recipeList","newList","item","filter","setItem","stringify","propTypes","recipeContent","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ShareIcon from '../images/shareIcon.svg';\nimport WhiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport BlackHeartIcon from '../images/blackHeartIcon.svg';\n\nfunction ShareAndFavDrink({ actualFood: food }) {\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [linkCopied, setLinkCopied] = useState(false);\n\n  const isFavorited = () => {\n    const { idDrink: id,\n      strCategory: category,\n      strAlcoholic: alcoholicOrNot,\n      strDrink: name, strDrinkThumb: image } = food[0];\n    const actualState = { id,\n      type: 'drink',\n      nationality: '',\n      alcoholicOrNot,\n      category,\n      name,\n      image };\n    const recipeListOne = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (recipeListOne) {\n      if (recipeListOne.find((elemento) => elemento\n        .id === actualState.id) !== undefined) {\n        setIsFavorite(true);\n      }\n    } else {\n      setIsFavorite(false);\n    }\n  };\n\n  useEffect(() => {\n    isFavorited();\n  }, []);\n\n  const copyToClipboard = async () => {\n    await navigator.clipboard.writeText(`${window.location}`.split('/in-progress')[0]);\n    setLinkCopied(true);\n  };\n  const addToFavoriteRecipeState = () => {\n    const { idDrink: id,\n      strCategory: category,\n      strAlcoholic: alcoholicOrNot,\n      strDrink: name, strDrinkThumb: image } = food[0];\n    const actualState = { id,\n      type: 'drink',\n      nationality: '',\n      alcoholicOrNot,\n      category,\n      name,\n      image };\n    const recipeList = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    let newList = [];\n    if (recipeList) {\n      newList = recipeList.find((item) => item.id === actualState.id)\n        ? recipeList.filter((item) => item.id !== actualState.id)\n        : [...recipeList, actualState];\n    } else {\n      newList = [actualState];\n    }\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newList));\n\n    setIsFavorite(!isFavorite);\n  };\n  return (\n    <div>\n\n      {linkCopied ? 'Link copied!'\n        : (\n          <input\n            onClick={ copyToClipboard }\n            data-testid=\"share-btn\"\n            type=\"image\"\n            src={ ShareIcon }\n            alt=\"ícone de compartilhamento\"\n          />)}\n      <input\n        onClick={ addToFavoriteRecipeState }\n        data-testid=\"favorite-btn\"\n        type=\"image\"\n        src={ isFavorite ? BlackHeartIcon : WhiteHeartIcon }\n        alt=\"ícone de coração para favoritar\"\n      />\n    </div>\n  );\n}\n\nexport default ShareAndFavDrink;\n\nShareAndFavDrink.propTypes = {\n  recipeContent: PropTypes.string,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}