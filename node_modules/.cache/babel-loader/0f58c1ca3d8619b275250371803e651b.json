{"ast":null,"code":"var _jsxFileName = \"/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/cards/RecomendationCards.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecomendationCards(_ref) {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  const {\n    allFood,\n    allDrink\n  } = useContext(MyProvider);\n  console.log(type);\n  const [recomendation, setRecomendation] = useState([]);\n\n  const fetchRecomendationDrink = async () => {\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    const data = await fetch(url);\n    const response = data.json();\n    setRecomendation(response.drinks);\n    console.log(recomendation);\n  };\n\n  const fetchRecomendationFood = async () => {\n    const url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    const data = await fetch(url);\n    const response = data.json();\n    setRecomendation(response.meals);\n  };\n\n  useEffect(() => {\n    if (type === 'drink') {\n      fetchRecomendationDrink();\n    }\n\n    fetchRecomendationFood();\n  }, [type]);\n  console.log(recomendation);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [' ', \"Sou Recomendados\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecomendationCards, \"ZyPNbQ4a/baO6QuBce6rjJfYcGY=\");\n\n_c = RecomendationCards;\nexport default RecomendationCards;\nRecomendationCards.propTypes = {\n  type: PropTypes.string\n}.isRequired;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecomendationCards\");","map":{"version":3,"sources":["/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/cards/RecomendationCards.jsx"],"names":["React","useContext","useEffect","useState","PropTypes","RecomendationCards","type","allFood","allDrink","MyProvider","console","log","recomendation","setRecomendation","fetchRecomendationDrink","url","data","fetch","response","json","drinks","fetchRecomendationFood","meals","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,kBAAT,OAAsC;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACpC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBP,UAAU,CAACQ,UAAD,CAAxC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMW,uBAAuB,GAAG,YAAY;AAC1C,UAAMC,GAAG,GAAG,2DAAZ;AACA,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAxB;AACA,UAAMG,QAAQ,GAAGF,IAAI,CAACG,IAAL,EAAjB;AACAN,IAAAA,gBAAgB,CAACK,QAAQ,CAACE,MAAV,CAAhB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;AACD,GAND;;AAQA,QAAMS,sBAAsB,GAAG,YAAY;AACzC,UAAMN,GAAG,GAAG,uDAAZ;AACA,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAxB;AACA,UAAMG,QAAQ,GAAGF,IAAI,CAACG,IAAL,EAAjB;AACAN,IAAAA,gBAAgB,CAACK,QAAQ,CAACI,KAAV,CAAhB;AACD,GALD;;AAOApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,IAAI,KAAK,OAAb,EAAsB;AACpBQ,MAAAA,uBAAuB;AACxB;;AACDO,IAAAA,sBAAsB;AACvB,GALQ,EAKN,CAACf,IAAD,CALM,CAAT;AAOAI,EAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;AAEA,sBACE;AAAA,eACG,GADH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GApCQP,kB;;KAAAA,kB;AAsCT,eAAeA,kBAAf;AAEAA,kBAAkB,CAACkB,SAAnB,GAA+B;AAC7BjB,EAAAA,IAAI,EAAEF,SAAS,CAACoB;AADa,EAE7BC,UAFF","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction RecomendationCards({ type }) {\n  const { allFood, allDrink } = useContext(MyProvider);\n  console.log(type);\n  const [recomendation, setRecomendation] = useState([]);\n\n  const fetchRecomendationDrink = async () => {\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    const data = await fetch(url);\n    const response = data.json();\n    setRecomendation(response.drinks);\n    console.log(recomendation);\n  };\n\n  const fetchRecomendationFood = async () => {\n    const url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    const data = await fetch(url);\n    const response = data.json();\n    setRecomendation(response.meals);\n  };\n\n  useEffect(() => {\n    if (type === 'drink') {\n      fetchRecomendationDrink();\n    }\n    fetchRecomendationFood();\n  }, [type]);\n\n  console.log(recomendation);\n\n  return (\n    <div>\n      {' '}\n      Sou Recomendados\n    </div>\n\n  );\n}\n\nexport default RecomendationCards;\n\nRecomendationCards.propTypes = {\n  type: PropTypes.string,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}