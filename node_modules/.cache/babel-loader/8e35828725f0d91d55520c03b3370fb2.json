{"ast":null,"code":"var _jsxFileName = \"/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/pages/FoodDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport RecomendationCards from '../cards/RecomendationCards';\nimport ShareIcon from '../images/shareIcon.svg';\nimport WhiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport BlackHeartIcon from '../images/blackHeartIcon.svg';\nimport ShareAndFav from '../components/ShareAndFav';\nimport './FixedButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FoodDetails() {\n  _s();\n\n  const [food, setFood] = useState('');\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [linkCopied, setLinkCopied] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n  const {\n    pathname\n  } = location;\n  const idNumber = pathname.split('foods/')[1];\n  useEffect(() => {\n    const fetchById = async () => {\n      const url = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${idNumber}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setFood(data.meals);\n    };\n\n    fetchById();\n  }, [idNumber]);\n\n  if (food.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n  console.log(food[0]);\n  console.log(JSON.parse(localStorage.getItem('favoriteRecipes')));\n  const ingredients = Object.values(Object.fromEntries(Object.entries(food[0]).filter(_ref => {\n    let [key] = _ref;\n    return key.includes('Ingredient');\n  }))).filter(e => e !== null);\n  const measures = Object.values(Object.fromEntries(Object.entries(food[0]).filter(_ref2 => {\n    let [key] = _ref2;\n    return key.includes('Measure');\n  }))).filter(e => e !== null);\n  const totalIngredients = ingredients.map((element, index) => measures[index] ? element.concat(` - ${measures[index]}`) : element);\n\n  const redirectInProgress = () => {\n    history.push(`${pathname}/in-progress`);\n  }; // https://stackoverflow.com/questions/39501289/in-reactjs-how-to-copy-text-to-clipboard\n\n\n  const copyToClipboard = async () => {\n    await navigator.clipboard.writeText(`${window.location}`);\n    setLinkCopied(true);\n  };\n\n  const addToFavoriteRecipeState = () => {\n    const {\n      idMeal: id,\n      strCategory: type,\n      strArea: nationality,\n      strCategory: category,\n      strMeal: name,\n      strMealThumb: image\n    } = food[0];\n    const actualState = {\n      id,\n      type,\n      nationality,\n      category,\n      name,\n      image\n    };\n    const recipeList = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    let newList = [];\n\n    if (recipeList) {\n      newList = recipeList.find(item => item.id === actualState.id) ? recipeList.filter(item => item.id !== actualState.id) : [...recipeList, actualState];\n    } else {\n      newList = [actualState];\n    }\n\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newList));\n    setIsFavorite(!isFavorite);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      width: 360,\n      \"data-testid\": \"recipe-photo\",\n      src: food[0].strMealThumb,\n      alt: \"ilustra\\xE7\\xE3o da receita\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      \"data-testid\": \"recipe-title\",\n      children: food[0].strMeal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      \"data-testid\": \"recipe-category\",\n      children: food[0].strCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShareAndFav, {\n      actualFood: food\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), linkCopied ? 'Link copied!' : /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: copyToClipboard,\n      \"data-testid\": \"share-btn\",\n      type: \"image\",\n      src: ShareIcon,\n      alt: \"\\xEDcone de compartilhamento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: addToFavoriteRecipeState,\n      \"data-testid\": \"favorite-btn\",\n      type: \"image\",\n      src: isFavorite ? BlackHeartIcon : WhiteHeartIcon,\n      alt: \"\\xEDcone de cora\\xE7\\xE3o para favoritar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), totalIngredients.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": `${index}-ingredient-name-and-measure`,\n        children: element\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Instructions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      \"data-testid\": \"instructions\",\n      children: food[0].strInstructions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: food[0].strYoutube\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      \"data-testid\": \"video\",\n      src: `https://www.youtube.com/embed/${food[0].strYoutube.split('v=')[1]}`,\n      allow: \"encrypted-media\",\n      title: \"video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecomendationCards, {\n      type: \"food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: redirectInProgress,\n      \"data-testid\": \"start-recipe-btn\",\n      className: \"start-recipe-button\",\n      children: \"Start Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n} // Explicação para utilização do embed no lugar do watch, tendo que fazer o split para pegar somente o id do vídeo\n// https://stackoverflow.com/questions/25661182/embed-youtube-video-refused-to-display-in-a-frame-because-it-set-x-frame-opti\n\n\n_s(FoodDetails, \"u8v8j8Ov7+thr7GtssjK7DLZG/o=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = FoodDetails;\nexport default FoodDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodDetails\");","map":{"version":3,"sources":["/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/pages/FoodDetails.jsx"],"names":["React","useEffect","useState","Button","useLocation","useHistory","RecomendationCards","ShareIcon","WhiteHeartIcon","BlackHeartIcon","ShareAndFav","FoodDetails","food","setFood","isFavorite","setIsFavorite","linkCopied","setLinkCopied","location","history","pathname","idNumber","split","fetchById","url","response","fetch","data","json","meals","length","console","log","JSON","parse","localStorage","getItem","ingredients","Object","values","fromEntries","entries","filter","key","includes","e","measures","totalIngredients","map","element","index","concat","redirectInProgress","push","copyToClipboard","navigator","clipboard","writeText","window","addToFavoriteRecipeState","idMeal","id","strCategory","type","strArea","nationality","category","strMeal","name","strMealThumb","image","actualState","recipeList","newList","find","item","setItem","stringify","strInstructions","strYoutube"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport RecomendationCards from '../cards/RecomendationCards';\nimport ShareIcon from '../images/shareIcon.svg';\nimport WhiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport BlackHeartIcon from '../images/blackHeartIcon.svg';\nimport ShareAndFav from '../components/ShareAndFav';\nimport './FixedButton.css';\n\nfunction FoodDetails() {\n  const [food, setFood] = useState('');\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [linkCopied, setLinkCopied] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n  const { pathname } = location;\n  const idNumber = pathname.split('foods/')[1];\n\n  useEffect(() => {\n    const fetchById = async () => {\n      const url = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${idNumber}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setFood(data.meals);\n    };\n    fetchById();\n  }, [idNumber]);\n\n  if (food.length === 0) {\n    return (<div>Carregando...</div>);\n  }\n\n  console.log(food[0]);\n  console.log(JSON.parse(localStorage.getItem('favoriteRecipes')));\n\n  const ingredients = Object.values(Object.fromEntries(Object.entries(food[0])\n    .filter(([key]) => key.includes('Ingredient')))).filter((e) => e !== null);\n\n  const measures = Object.values(Object.fromEntries(Object.entries(food[0])\n    .filter(([key]) => key.includes('Measure')))).filter((e) => e !== null);\n\n  const totalIngredients = ingredients\n    .map((element, index) => (\n      measures[index]\n        ? element.concat(` - ${measures[index]}`)\n        : element\n    ));\n\n  const redirectInProgress = () => {\n    history.push(`${pathname}/in-progress`);\n  };\n\n  // https://stackoverflow.com/questions/39501289/in-reactjs-how-to-copy-text-to-clipboard\n  const copyToClipboard = async () => {\n    await navigator.clipboard.writeText(`${window.location}`);\n    setLinkCopied(true);\n  };\n\n  const addToFavoriteRecipeState = () => {\n    const { idMeal: id,\n      strCategory: type,\n      strArea: nationality,\n      strCategory: category,\n      strMeal: name, strMealThumb: image } = food[0];\n    const actualState = { id, type, nationality, category, name, image };\n    const recipeList = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    let newList = [];\n    if (recipeList) {\n      newList = recipeList.find((item) => item.id === actualState.id)\n        ? recipeList.filter((item) => item.id !== actualState.id)\n        : [...recipeList, actualState];\n    } else {\n      newList = [actualState];\n    }\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newList));\n\n    setIsFavorite(!isFavorite);\n  };\n\n  return (\n    <div>\n      <img\n        width={ 360 }\n        data-testid=\"recipe-photo\"\n        src={ food[0].strMealThumb }\n        alt=\"ilustração da receita\"\n      />\n      <h1 data-testid=\"recipe-title\">\n        {food[0].strMeal}\n      </h1>\n      <p data-testid=\"recipe-category\">{food[0].strCategory}</p>\n      <ShareAndFav actualFood={ food } />\n      {linkCopied ? 'Link copied!'\n        : (\n          <input\n            onClick={ copyToClipboard }\n            data-testid=\"share-btn\"\n            type=\"image\"\n            src={ ShareIcon }\n            alt=\"ícone de compartilhamento\"\n          />)}\n      <input\n        onClick={ addToFavoriteRecipeState }\n        data-testid=\"favorite-btn\"\n        type=\"image\"\n        src={ isFavorite ? BlackHeartIcon : WhiteHeartIcon }\n        alt=\"ícone de coração para favoritar\"\n      />\n      <h3>Ingredients</h3>\n      {totalIngredients.map((element, index) => (\n        <div key={ index }>\n          <p data-testid={ `${index}-ingredient-name-and-measure` }>{element}</p>\n        </div>\n      ))}\n      <h3>Instructions</h3>\n      <p data-testid=\"instructions\">{food[0].strInstructions}</p>\n      <h3>Video</h3>\n      <p>{food[0].strYoutube}</p>\n      <iframe\n        data-testid=\"video\"\n        src={ `https://www.youtube.com/embed/${food[0].strYoutube.split('v=')[1]}` }\n        allow=\"encrypted-media\"\n        title=\"video\"\n      />\n      <RecomendationCards type=\"food\" />\n      <Button\n        onClick={ redirectInProgress }\n        data-testid=\"start-recipe-btn\"\n        className=\"start-recipe-button\"\n      >\n        Start Recipe\n\n      </Button>\n    </div>\n\n  );\n}\n\n// Explicação para utilização do embed no lugar do watch, tendo que fazer o split para pegar somente o id do vídeo\n// https://stackoverflow.com/questions/25661182/embed-youtube-video-refused-to-display-in-a-frame-because-it-set-x-frame-opti\nexport default FoodDetails;\n"]},"metadata":{},"sourceType":"module"}