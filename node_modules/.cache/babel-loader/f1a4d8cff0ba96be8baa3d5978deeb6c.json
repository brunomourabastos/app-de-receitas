{"ast":null,"code":"var _jsxFileName = \"/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/cards/RecomendationCards.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from '../context/MyContext';\nimport './RecomendationCards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecomendationCards(_ref) {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  let recomendation = [];\n  const {\n    allFood,\n    allDrink\n  } = useContext(MyContext);\n  const MAX_LENGTH = 6;\n\n  if (allFood.length > MAX_LENGTH || allDrink.length > MAX_LENGTH) {\n    allFood.length = 6;\n    allDrink.length = 6;\n  }\n\n  if (type === 'drink') {\n    recomendation = allFood;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recomendation-card\",\n      children: recomendation.map((_ref2, index) => {\n        let {\n          strCategory,\n          strMealThumb,\n          strMeal\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": `${index}-recomendation-card`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            width: 100,\n            src: strMealThumb,\n            alt: strMeal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: strCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  recomendation = allDrink;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recomendation-card\",\n    children: recomendation.map((_ref3, index) => {\n      let {\n        strAlcoholic,\n        strDrinkThumb,\n        strMeal\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": `${index}-recomendation-card`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          width: 100,\n          src: strDrinkThumb,\n          alt: strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: strAlcoholic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecomendationCards, \"7x3/fW7JUTU6bCAeNzmY0qMYy4Q=\");\n\n_c = RecomendationCards;\nexport default RecomendationCards;\nRecomendationCards.propTypes = {\n  type: PropTypes.string\n}.isRequired;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecomendationCards\");","map":{"version":3,"sources":["/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/cards/RecomendationCards.jsx"],"names":["React","useContext","PropTypes","MyContext","RecomendationCards","type","recomendation","allFood","allDrink","MAX_LENGTH","length","map","index","strCategory","strMealThumb","strMeal","strAlcoholic","strDrinkThumb","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAO,0BAAP;;;AAEA,SAASC,kBAAT,OAAsC;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACpC,MAAIC,aAAa,GAAG,EAApB;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBP,UAAU,CAACE,SAAD,CAAxC;AACA,QAAMM,UAAU,GAAG,CAAnB;;AAEA,MAAIF,OAAO,CAACG,MAAR,GAAiBD,UAAjB,IAA+BD,QAAQ,CAACE,MAAT,GAAkBD,UAArD,EAAiE;AAC/DF,IAAAA,OAAO,CAACG,MAAR,GAAiB,CAAjB;AACAF,IAAAA,QAAQ,CAACE,MAAT,GAAkB,CAAlB;AACD;;AAED,MAAIL,IAAI,KAAK,OAAb,EAAsB;AACpBC,IAAAA,aAAa,GAAGC,OAAhB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBACGD,aAAa,CAACK,GAAd,CAAkB,QAAyCC,KAAzC;AAAA,YAAC;AAAEC,UAAAA,WAAF;AAAeC,UAAAA,YAAf;AAA6BC,UAAAA;AAA7B,SAAD;AAAA,4BACjB;AACE,yBAAe,GAAEH,KAAM,qBADzB;AAAA,kCAIE;AAAK,YAAA,KAAK,EAAG,GAAb;AAAmB,YAAA,GAAG,EAAGE,YAAzB;AAAwC,YAAA,GAAG,EAAGC;AAA9C;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,sBACGF;AADH;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA,WAEQD,KAFR;AAAA;AAAA;AAAA;AAAA,gBADiB;AAAA,OAAlB;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AACDN,EAAAA,aAAa,GAAGE,QAAhB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,cACGF,aAAa,CAACK,GAAd,CAAkB,QAA2CC,KAA3C;AAAA,UAAC;AAAEI,QAAAA,YAAF;AAAgBC,QAAAA,aAAhB;AAA+BF,QAAAA;AAA/B,OAAD;AAAA,0BACjB;AACE,uBAAe,GAAEH,KAAM,qBADzB;AAAA,gCAIE;AAAK,UAAA,KAAK,EAAG,GAAb;AAAmB,UAAA,GAAG,EAAGK,aAAzB;AAAyC,UAAA,GAAG,EAAGF;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,oBACGC;AADH;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA,SAEQJ,KAFR;AAAA;AAAA;AAAA;AAAA,cADiB;AAAA,KAAlB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAjDQR,kB;;KAAAA,kB;AAmDT,eAAeA,kBAAf;AAEAA,kBAAkB,CAACc,SAAnB,GAA+B;AAC7Bb,EAAAA,IAAI,EAAEH,SAAS,CAACiB;AADa,EAE7BC,UAFF","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from '../context/MyContext';\nimport './RecomendationCards.css';\n\nfunction RecomendationCards({ type }) {\n  let recomendation = [];\n  const { allFood, allDrink } = useContext(MyContext);\n  const MAX_LENGTH = 6;\n\n  if (allFood.length > MAX_LENGTH || allDrink.length > MAX_LENGTH) {\n    allFood.length = 6;\n    allDrink.length = 6;\n  }\n\n  if (type === 'drink') {\n    recomendation = allFood;\n    return (\n      <div className=\"recomendation-card\">\n        {recomendation.map(({ strCategory, strMealThumb, strMeal }, index) => (\n          <div\n            data-testid={ `${index}-recomendation-card` }\n            key={ index }\n          >\n            <img width={ 100 } src={ strMealThumb } alt={ strMeal } />\n            <p>\n              {strCategory}\n            </p>\n\n          </div>\n\n        ))}\n      </div>\n\n    );\n  }\n  recomendation = allDrink;\n  return (\n    <div className=\"recomendation-card\">\n      {recomendation.map(({ strAlcoholic, strDrinkThumb, strMeal }, index) => (\n        <div\n          data-testid={ `${index}-recomendation-card` }\n          key={ index }\n        >\n          <img width={ 100 } src={ strDrinkThumb } alt={ strMeal } />\n          <p>\n            {strAlcoholic}\n          </p>\n        </div>\n\n      ))}\n\n    </div>\n  );\n}\n\nexport default RecomendationCards;\n\nRecomendationCards.propTypes = {\n  type: PropTypes.string,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}