{"ast":null,"code":"var _jsxFileName = \"/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/pages/Foods.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Header from '../components/Header';\nimport MyContext from '../context/MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Foods() {\n  _s();\n\n  const {\n    filteredFood,\n    food\n  } = useContext(MyContext);\n  console.log(food);\n  const MAX_RENDER = 12;\n\n  if (food.length > MAX_RENDER) {\n    food.length = 12;\n  }\n\n  function renderFood() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        pageName: \"Foods\",\n        needRender: true,\n        type: \"food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Foods \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), filteredFood && food.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": `${index}-recipe-card`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": `${index}-card-img`,\n          src: element.strMealThumb,\n          alt: \"food ilustration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": `${index}-card-name`,\n          children: element.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true);\n  }\n\n  function verifyFood() {\n    if (food === null) {\n      return global.alert('Sorry, we haven\\'t found any recipes for these filters.');\n    }\n\n    return renderFood();\n  }\n\n  return verifyFood();\n}\n\n_s(Foods, \"7awItm1Ms+2KY/hMPKfN+MvSjLM=\");\n\n_c = Foods;\nexport default Foods;\n\nvar _c;\n\n$RefreshReg$(_c, \"Foods\");","map":{"version":3,"sources":["/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/pages/Foods.jsx"],"names":["React","useContext","Header","MyContext","Foods","filteredFood","food","console","log","MAX_RENDER","length","renderFood","map","element","index","strMealThumb","strMeal","verifyFood","global","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAyBL,UAAU,CAACE,SAAD,CAAzC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,QAAMG,UAAU,GAAG,EAAnB;;AACA,MAAIH,IAAI,CAACI,MAAL,GAAcD,UAAlB,EAA8B;AAC5BH,IAAAA,IAAI,CAACI,MAAL,GAAc,EAAd;AACD;;AACD,WAASC,UAAT,GAAsB;AACpB,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,OAAjB;AAAyB,QAAA,UAAU,MAAnC;AAAoC,QAAA,IAAI,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGN,YAAY,IACZC,IAAI,CAACM,GAAL,CAAS,CAACC,OAAD,EAAUC,KAAV,kBACV;AAAmB,uBAAe,GAAEA,KAAM,cAA1C;AAAA,gCACE;AACE,yBAAe,GAAEA,KAAM,WADzB;AAEE,UAAA,GAAG,EAAGD,OAAO,CAACE,YAFhB;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAG,yBAAe,GAAED,KAAM,YAA1B;AAAA,oBACGD,OAAO,CAACG;AADX;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA,SAAWF,KAAX;AAAA;AAAA;AAAA;AAAA,cADC,CAJH;AAAA,oBADF;AAmBD;;AAED,WAASG,UAAT,GAAsB;AACpB,QAAIX,IAAI,KAAK,IAAb,EAAmB;AACjB,aAAOY,MAAM,CAACC,KAAP,CACL,yDADK,CAAP;AAGD;;AACD,WAAOR,UAAU,EAAjB;AACD;;AACD,SAAQM,UAAU,EAAlB;AACD;;GAvCQb,K;;KAAAA,K;AAyCT,eAAeA,KAAf","sourcesContent":["import React, { useContext } from 'react';\nimport Header from '../components/Header';\nimport MyContext from '../context/MyContext';\n\nfunction Foods() {\n  const { filteredFood, food } = useContext(MyContext);\n  console.log(food);\n\n  const MAX_RENDER = 12;\n  if (food.length > MAX_RENDER) {\n    food.length = 12;\n  }\n  function renderFood() {\n    return (\n      <>\n        <Header pageName=\"Foods\" needRender type=\"food\" />\n        <div> Foods </div>\n        {filteredFood\n      && food.map((element, index) => (\n        <div key={ index } data-testid={ `${index}-recipe-card` }>\n          <img\n            data-testid={ `${index}-card-img` }\n            src={ element.strMealThumb }\n            alt=\"food ilustration\"\n          />\n          <p data-testid={ `${index}-card-name` }>\n            {element.strMeal}\n          </p>\n        </div>\n      ))}\n      </>\n    );\n  }\n\n  function verifyFood() {\n    if (food === null) {\n      return global.alert(\n        'Sorry, we haven\\'t found any recipes for these filters.',\n      );\n    }\n    return renderFood();\n  }\n  return (verifyFood());\n}\n\nexport default Foods;\n"]},"metadata":{},"sourceType":"module"}