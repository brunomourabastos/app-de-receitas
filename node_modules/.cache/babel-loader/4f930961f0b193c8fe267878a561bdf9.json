{"ast":null,"code":"var _jsxFileName = \"/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/components/SearchBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport MyContext from '../context/MyContext';\nimport { fetchFoodApi, fetchDrinkApi } from '../services/fetchApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar(_ref) {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  const [drink, setDrink, food, setFood] = useContext(MyContext);\n  const history = useHistory();\n  const [searchRadio, setSearchRadio] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n\n  function verifyQuantity() {\n    if (food.length === 1) {\n      const {\n        id\n      } = food;\n      history.push(`/foods/${id}`);\n    }\n\n    if (drink.length === 1) {\n      const {\n        id\n      } = drink;\n      history.push(`/drinks/${id}`);\n    }\n  }\n\n  async function drinkApi() {\n    if (searchRadio === 'ingredient') {\n      const data = await fetchDrinkApi('fetchIngredient', searchValue);\n      setDrink(data.drinks);\n      verifyQuantity();\n    }\n\n    if (searchRadio === 'radioName') {\n      const data = await fetchDrinkApi('fetchName', searchValue);\n      setDrink(data.drinks);\n      verifyQuantity();\n    }\n\n    if (searchRadio === 'firstLetter') {\n      if (searchValue.length > 1) {\n        global.alert('Your search must have only 1 (one) character');\n      } else {\n        const data = await fetchDrinkApi('fetchFirstLetter', searchValue);\n        setDrink(data.drinks);\n        verifyQuantity();\n      }\n    }\n  }\n\n  const searchClick = async () => {\n    console.log('cliquei no search meu valor Ã©', searchRadio, type);\n\n    if (type === 'food') {\n      if (searchRadio === 'ingredient') {\n        const data = await fetchFoodApi('fetchIngredient', searchValue);\n        setFood(data.meals);\n        verifyQuantity();\n      }\n\n      if (searchRadio === 'radioName') {\n        const data = await fetchFoodApi('fetchName', searchValue);\n        setFood(data.meals);\n        verifyQuantity();\n      }\n\n      if (searchRadio === 'firstLetter') {\n        if (searchValue.length > 1) {\n          global.alert('Your search must have only 1 (one) character');\n        } else {\n          const data = await fetchFoodApi('fetchFirstLetter', searchValue);\n          setFood(data.meals);\n          verifyQuantity();\n        }\n      }\n    } else {\n      drinkApi();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"search-input\",\n        type: \"text\",\n        placeholder: \"Buscar\",\n        value: searchValue,\n        onChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          return setSearchValue(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ingredient-radio\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-testid\": \"ingredient-search-radio\",\n          type: \"radio\",\n          name: \"search-radio\",\n          id: \"ingredient-radio\",\n          onChange: () => setSearchRadio('ingredient')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), \"Ingredient\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name-radio\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-testid\": \"name-search-radio\",\n          type: \"radio\",\n          name: \"search-radio\",\n          id: \"name-radio\",\n          onChange: () => setSearchRadio('radioName')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), \"Name\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"first-letter-radio\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-testid\": \"first-letter-search-radio\",\n          type: \"radio\",\n          name: \"search-radio\",\n          id: \"first-letter-radio\",\n          onChange: () => setSearchRadio('firstLetter')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), \"First Letter\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-testid\": \"exec-search-btn\",\n          type: \"button\",\n          onClick: searchClick,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"RqQM/1f02sQ6/sOoKTYJWd5fkXI=\", false, function () {\n  return [useHistory];\n});\n\n_c = SearchBar;\nexport default SearchBar;\nSearchBar.propTypes = {\n  needRender: PropTypes.bool\n}.isRequired;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/components/SearchBar.jsx"],"names":["React","useState","useContext","PropTypes","useHistory","MyContext","fetchFoodApi","fetchDrinkApi","SearchBar","type","drink","setDrink","food","setFood","history","searchRadio","setSearchRadio","searchValue","setSearchValue","verifyQuantity","length","id","push","drinkApi","data","drinks","global","alert","searchClick","console","log","meals","target","value","propTypes","needRender","bool","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport MyContext from '../context/MyContext';\nimport { fetchFoodApi, fetchDrinkApi } from '../services/fetchApi';\n\nfunction SearchBar({ type }) {\n  const [drink, setDrink, food, setFood] = useContext(MyContext);\n  const history = useHistory();\n  const [searchRadio, setSearchRadio] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n\n  function verifyQuantity() {\n    if (food.length === 1) {\n      const { id } = food;\n      history.push(`/foods/${id}`);\n    }\n    if (drink.length === 1) {\n      const { id } = drink;\n      history.push(`/drinks/${id}`);\n    }\n  }\n\n  async function drinkApi() {\n    if (searchRadio === 'ingredient') {\n      const data = await fetchDrinkApi('fetchIngredient', searchValue);\n      setDrink(data.drinks);\n      verifyQuantity();\n    }\n    if (searchRadio === 'radioName') {\n      const data = await fetchDrinkApi('fetchName', searchValue);\n      setDrink(data.drinks);\n      verifyQuantity();\n    }\n    if (searchRadio === 'firstLetter') {\n      if (searchValue.length > 1) {\n        global.alert('Your search must have only 1 (one) character');\n      } else {\n        const data = await fetchDrinkApi('fetchFirstLetter', searchValue);\n        setDrink(data.drinks);\n        verifyQuantity();\n      }\n    }\n  }\n  const searchClick = async () => {\n    console.log('cliquei no search meu valor Ã©', searchRadio, type);\n    if (type === 'food') {\n      if (searchRadio === 'ingredient') {\n        const data = await fetchFoodApi('fetchIngredient', searchValue);\n        setFood(data.meals);\n        verifyQuantity();\n      }\n      if (searchRadio === 'radioName') {\n        const data = await fetchFoodApi('fetchName', searchValue);\n        setFood(data.meals);\n        verifyQuantity();\n      }\n      if (searchRadio === 'firstLetter') {\n        if (searchValue.length > 1) {\n          global.alert('Your search must have only 1 (one) character');\n        } else {\n          const data = await fetchFoodApi('fetchFirstLetter', searchValue);\n          setFood(data.meals);\n          verifyQuantity();\n        }\n      }\n    } else {\n      drinkApi();\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <input\n          data-testid=\"search-input\"\n          type=\"text\"\n          placeholder=\"Buscar\"\n          value={ searchValue }\n          onChange={ ({ target }) => setSearchValue(target.value) }\n        />\n      </div>\n      <div>\n        <label htmlFor=\"ingredient-radio\">\n          <input\n            data-testid=\"ingredient-search-radio\"\n            type=\"radio\"\n            name=\"search-radio\"\n            id=\"ingredient-radio\"\n            onChange={ () => setSearchRadio('ingredient') }\n          />\n          Ingredient\n        </label>\n        <label htmlFor=\"name-radio\">\n          <input\n            data-testid=\"name-search-radio\"\n            type=\"radio\"\n            name=\"search-radio\"\n            id=\"name-radio\"\n            onChange={ () => setSearchRadio('radioName') }\n          />\n          Name\n        </label>\n        <label htmlFor=\"first-letter-radio\">\n          <input\n            data-testid=\"first-letter-search-radio\"\n            type=\"radio\"\n            name=\"search-radio\"\n            id=\"first-letter-radio\"\n            onChange={ () => setSearchRadio('firstLetter') }\n          />\n          First Letter\n        </label>\n        <div>\n          <button\n            data-testid=\"exec-search-btn\"\n            type=\"button\"\n            onClick={ searchClick }\n          >\n            Search\n\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  needRender: PropTypes.bool,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}