{"ast":null,"code":"var _jsxFileName = \"/Users/brunobastos/bruno/github-projects/app-de-receitas/app-de-receitas/src/pages/FoodNationalities.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport FoodCards from '../cards/FoodCards';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport MyContext from '../context/MyContext';\nimport { fetchFoodApi } from '../services/fetchApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FoodNationalities() {\n  _s();\n\n  const {\n    setAllFood\n  } = useContext(MyContext);\n  const [nationalities, setNationalities] = useState([]);\n\n  const fetchAllFood = async () => {\n    const data = await fetchFoodApi('fetchName', '');\n    setAllFood(data.meals);\n  };\n\n  useEffect(() => {\n    async function fetchNationalities() {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list');\n      const {\n        meals\n      } = await response.json();\n      setNationalities(meals);\n    }\n\n    fetchNationalities();\n  }, []);\n\n  async function fetchFilterByNationalities(area) {\n    const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${area}`);\n    const data = await response.json();\n    setAllFood(data.meals);\n  }\n\n  function filterNationality(e) {\n    if (e.target.value !== 'All') {\n      fetchFilterByNationalities(e.target.value);\n    } else {\n      fetchAllFood();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      pageName: \"Explore Nationalities\",\n      needRender: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        \"data-testid\": \"explore-by-nationality-dropdown\",\n        name: \"nationalities\",\n        id: \"nationalities\",\n        onChange: filterNationality,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          \"data-testid\": `${'All'}-option`,\n          value: \"All\",\n          children: \"All\"\n        }, \"All\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), nationalities.map((nationality, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          \"data-testid\": `${nationality.strArea}-option`,\n          value: nationality.strArea,\n          children: nationality.strArea\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FoodCards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FoodNationalities, \"dm2y+Bv/Hr6LlyRAibWl5SV3JQE=\");\n\n_c = FoodNationalities;\nexport default FoodNationalities;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodNationalities\");","map":{"version":3,"sources":["/Users/brunobastos/bruno/github-projects/app-de-receitas/app-de-receitas/src/pages/FoodNationalities.jsx"],"names":["React","useContext","useEffect","useState","FoodCards","Footer","Header","MyContext","fetchFoodApi","FoodNationalities","setAllFood","nationalities","setNationalities","fetchAllFood","data","meals","fetchNationalities","response","fetch","json","fetchFilterByNationalities","area","filterNationality","e","target","value","map","nationality","i","strArea"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAASC,YAAT,QAA6B,sBAA7B;;;;AAEA,SAASC,iBAAT,GAA6B;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAiBT,UAAU,CAACM,SAAD,CAAjC;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMU,YAAY,GAAG,YAAY;AAC/B,UAAMC,IAAI,GAAG,MAAMN,YAAY,CAAC,WAAD,EAAc,EAAd,CAA/B;AACAE,IAAAA,UAAU,CAACI,IAAI,CAACC,KAAN,CAAV;AACD,GAHD;;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAec,kBAAf,GAAoC;AAClC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yDAAD,CAA5B;AACA,YAAM;AAAEH,QAAAA;AAAF,UAAY,MAAME,QAAQ,CAACE,IAAT,EAAxB;AACAP,MAAAA,gBAAgB,CAACG,KAAD,CAAhB;AACD;;AACDC,IAAAA,kBAAkB;AACnB,GAPQ,EAON,EAPM,CAAT;;AASA,iBAAeI,0BAAf,CAA0CC,IAA1C,EAAgD;AAC9C,UAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAE,wDAAuDG,IAAK,EAA9D,CAA5B;AACA,UAAMP,IAAI,GAAG,MAAMG,QAAQ,CAACE,IAAT,EAAnB;AACAT,IAAAA,UAAU,CAACI,IAAI,CAACC,KAAN,CAAV;AACD;;AAED,WAASO,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5B,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,KAAvB,EAA8B;AAC5BL,MAAAA,0BAA0B,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1B;AACD,KAFD,MAEO;AACLZ,MAAAA,YAAY;AACb;AACF;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,uBAAjB;AAAyC,MAAA,UAAU;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AACE,uBAAY,iCADd;AAEE,QAAA,IAAI,EAAC,eAFP;AAGE,QAAA,EAAE,EAAC,eAHL;AAIE,QAAA,QAAQ,EAAGS,iBAJb;AAAA,gCAME;AAEE,yBAAe,GAAE,KAAM,SAFzB;AAGE,UAAA,KAAK,EAAC,KAHR;AAAA;AAAA,WACM,KADN;AAAA;AAAA;AAAA;AAAA,gBANF,EAaGX,aAAa,CAACe,GAAd,CAAkB,CAACC,WAAD,EAAcC,CAAd,kBACjB;AAEE,yBAAe,GAAED,WAAW,CAACE,OAAQ,SAFvC;AAGE,UAAA,KAAK,EAAGF,WAAW,CAACE,OAHtB;AAAA,oBAKGF,WAAW,CAACE;AALf,WACQD,CADR;AAAA;AAAA;AAAA;AAAA,gBADD,CAbH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAwBE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eA4BE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA,kBADF;AAgCD;;GAhEQnB,iB;;KAAAA,iB;AAkET,eAAeA,iBAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport FoodCards from '../cards/FoodCards';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport MyContext from '../context/MyContext';\nimport { fetchFoodApi } from '../services/fetchApi';\n\nfunction FoodNationalities() {\n  const { setAllFood } = useContext(MyContext);\n  const [nationalities, setNationalities] = useState([]);\n\n  const fetchAllFood = async () => {\n    const data = await fetchFoodApi('fetchName', '');\n    setAllFood(data.meals);\n  };\n\n  useEffect(() => {\n    async function fetchNationalities() {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list');\n      const { meals } = await response.json();\n      setNationalities(meals);\n    }\n    fetchNationalities();\n  }, []);\n\n  async function fetchFilterByNationalities(area) {\n    const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${area}`);\n    const data = await response.json();\n    setAllFood(data.meals);\n  }\n\n  function filterNationality(e) {\n    if (e.target.value !== 'All') {\n      fetchFilterByNationalities(e.target.value);\n    } else {\n      fetchAllFood();\n    }\n  }\n\n  return (\n    <>\n      <Header pageName=\"Explore Nationalities\" needRender />\n      <main>\n        <select\n          data-testid=\"explore-by-nationality-dropdown\"\n          name=\"nationalities\"\n          id=\"nationalities\"\n          onChange={ filterNationality }\n        >\n          <option\n            key=\"All\"\n            data-testid={ `${'All'}-option` }\n            value=\"All\"\n          >\n            All\n          </option>\n          {nationalities.map((nationality, i) => (\n            <option\n              key={ i }\n              data-testid={ `${nationality.strArea}-option` }\n              value={ nationality.strArea }\n            >\n              {nationality.strArea}\n            </option>\n          ))}\n        </select>\n        <FoodCards />\n      </main>\n      <Footer />\n    </>\n  );\n}\n\nexport default FoodNationalities;\n"]},"metadata":{},"sourceType":"module"}