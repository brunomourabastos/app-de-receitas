{"ast":null,"code":"var _jsxFileName = \"/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/components/FoodCategories.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport MyContext from '../context/MyContext';\nimport { fetchFoodApi } from '../services/fetchApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FoodCategories() {\n  _s();\n\n  const {\n    foodCategories,\n    setAllFood\n  } = useContext(MyContext);\n  const [toggle, setToggle] = useState(true);\n  const MAX_RENDER = 5;\n\n  if (foodCategories.length > MAX_RENDER) {\n    foodCategories.length = 5;\n  }\n\n  const applyCategoryFilter = async category => {\n    if (toggle) {\n      const url = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`;\n      const data = await fetch(url);\n      const {\n        meals\n      } = await data.json();\n      setAllFood(meals);\n    } else {\n      const data = await fetchFoodApi('fetchName', '');\n      setAllFood(data.meals);\n    }\n\n    setToggle(!toggle);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: foodCategories.map((_ref, index) => {\n      let {\n        strCategory\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          \"data-testid\": `${strCategory}-category-filter`,\n          type: \"button\",\n          onClick: () => applyCategoryFilter(strCategory),\n          children: strCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FoodCategories, \"nB4Dt5+7hC1VZzZire4wt57afEM=\");\n\n_c = FoodCategories;\nexport default FoodCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodCategories\");","map":{"version":3,"sources":["/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/components/FoodCategories.jsx"],"names":["React","useContext","useState","Button","MyContext","fetchFoodApi","FoodCategories","foodCategories","setAllFood","toggle","setToggle","MAX_RENDER","length","applyCategoryFilter","category","url","data","fetch","meals","json","map","index","strCategory"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAASC,YAAT,QAA6B,sBAA7B;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAiCP,UAAU,CAACG,SAAD,CAAjD;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMS,UAAU,GAAG,CAAnB;;AACA,MAAIJ,cAAc,CAACK,MAAf,GAAwBD,UAA5B,EAAwC;AACtCJ,IAAAA,cAAc,CAACK,MAAf,GAAwB,CAAxB;AACD;;AAED,QAAMC,mBAAmB,GAAG,MAAOC,QAAP,IAAoB;AAC9C,QAAIL,MAAJ,EAAY;AACV,YAAMM,GAAG,GAAI,wDAAuDD,QAAS,EAA7E;AACA,YAAME,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAxB;AACA,YAAM;AAAEG,QAAAA;AAAF,UAAY,MAAMF,IAAI,CAACG,IAAL,EAAxB;AACAX,MAAAA,UAAU,CAACU,KAAD,CAAV;AACD,KALD,MAKO;AACL,YAAMF,IAAI,GAAG,MAAMX,YAAY,CAAC,WAAD,EAAc,EAAd,CAA/B;AACAG,MAAAA,UAAU,CAACQ,IAAI,CAACE,KAAN,CAAV;AACD;;AACDR,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAXD;;AAaA,sBACE;AAAA,cAEGF,cAAc,CAACa,GAAf,CAAmB,OAAkBC,KAAlB;AAAA,UAAC;AAAEC,QAAAA;AAAF,OAAD;AAAA,0BAClB;AAAA,+BACE,QAAC,MAAD;AACE,yBAAe,GAAEA,WAAY,kBAD/B;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAG,MAAMT,mBAAmB,CAACS,WAAD,CAHrC;AAAA,oBAKGA;AALH;AAAA;AAAA;AAAA;AAAA;AADF,SAAWD,KAAX;AAAA;AAAA;AAAA;AAAA,cADkB;AAAA,KAAnB;AAFH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAtCQf,c;;KAAAA,c;AAwCT,eAAeA,cAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport MyContext from '../context/MyContext';\nimport { fetchFoodApi } from '../services/fetchApi';\n\nfunction FoodCategories() {\n  const { foodCategories, setAllFood } = useContext(MyContext);\n  const [toggle, setToggle] = useState(true);\n  const MAX_RENDER = 5;\n  if (foodCategories.length > MAX_RENDER) {\n    foodCategories.length = 5;\n  }\n\n  const applyCategoryFilter = async (category) => {\n    if (toggle) {\n      const url = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`;\n      const data = await fetch(url);\n      const { meals } = await data.json();\n      setAllFood(meals);\n    } else {\n      const data = await fetchFoodApi('fetchName', '');\n      setAllFood(data.meals);\n    }\n    setToggle(!toggle);\n  };\n\n  return (\n    <div>\n\n      {foodCategories.map(({ strCategory }, index) => (\n        <div key={ index }>\n          <Button\n            data-testid={ `${strCategory}-category-filter` }\n            type=\"button\"\n            onClick={ () => applyCategoryFilter(strCategory) }\n          >\n            {strCategory}\n\n          </Button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default FoodCategories;\n"]},"metadata":{},"sourceType":"module"}