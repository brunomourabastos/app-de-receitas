{"ast":null,"code":"var _jsxFileName = \"/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/cards/RecomendationCards.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecomendationCards(_ref) {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  console.log(type);\n  const [recomendation, setRecomendation] = useState([]);\n\n  const fetchRecomendationDrink = async () => {\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    const data = await fetch(url);\n    const response = data.json();\n    setRecomendation(response.drinks);\n  };\n\n  const fetchRecomendationFood = async () => {\n    const url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    const data = await fetch(url);\n    const response = data.json();\n    setRecomendation(response.meals);\n  };\n\n  if (type === 'drink') {} else {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [' ', \"Sou Recomendados\", recomendation && recomendation.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: element.strCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)), console.log('estou no card de recomendados')]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecomendationCards, \"rZk5KyvQRdMfnQNhdjBcpyIEpGk=\");\n\n_c = RecomendationCards;\nexport default RecomendationCards;\nRecomendationCards.propTypes = {\n  type: PropTypes.string\n}.isRequired;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecomendationCards\");","map":{"version":3,"sources":["/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/cards/RecomendationCards.jsx"],"names":["React","useState","PropTypes","RecomendationCards","type","console","log","recomendation","setRecomendation","fetchRecomendationDrink","url","data","fetch","response","json","drinks","fetchRecomendationFood","meals","map","element","index","strCategory","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,kBAAT,OAAsC;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMQ,uBAAuB,GAAG,YAAY;AAC1C,UAAMC,GAAG,GAAG,2DAAZ;AACA,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAxB;AACA,UAAMG,QAAQ,GAAGF,IAAI,CAACG,IAAL,EAAjB;AACAN,IAAAA,gBAAgB,CAACK,QAAQ,CAACE,MAAV,CAAhB;AACD,GALD;;AAOA,QAAMC,sBAAsB,GAAG,YAAY;AACzC,UAAMN,GAAG,GAAG,uDAAZ;AACA,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAxB;AACA,UAAMG,QAAQ,GAAGF,IAAI,CAACG,IAAL,EAAjB;AACAN,IAAAA,gBAAgB,CAACK,QAAQ,CAACI,KAAV,CAAhB;AACD,GALD;;AAOA,MAAIb,IAAI,KAAK,OAAb,EAAsB,CAErB,CAFD,MAEO,CAEN;;AACD,sBACE;AAAA,eACG,GADH,sBAGGG,aAAa,IAAIA,aAAa,CAACW,GAAd,CAAkB,CAACC,OAAD,EAAUC,KAAV,kBAClC;AAAA,6BACE;AAAA,kBAAID,OAAO,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,OAAWD,KAAX;AAAA;AAAA;AAAA;AAAA,YADgB,CAHpB,EAQGf,OAAO,CAACC,GAAR,CAAY,+BAAZ,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GApCQH,kB;;KAAAA,kB;AAsCT,eAAeA,kBAAf;AAEAA,kBAAkB,CAACmB,SAAnB,GAA+B;AAC7BlB,EAAAA,IAAI,EAAEF,SAAS,CAACqB;AADa,EAE7BC,UAFF","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction RecomendationCards({ type }) {\n  console.log(type);\n  const [recomendation, setRecomendation] = useState([]);\n\n  const fetchRecomendationDrink = async () => {\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    const data = await fetch(url);\n    const response = data.json();\n    setRecomendation(response.drinks);\n  };\n\n  const fetchRecomendationFood = async () => {\n    const url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    const data = await fetch(url);\n    const response = data.json();\n    setRecomendation(response.meals);\n  };\n\n  if (type === 'drink') {\n\n  } else {\n\n  }\n  return (\n    <div>\n      {' '}\n      Sou Recomendados\n      {recomendation && recomendation.map((element, index) => (\n        <div key={ index }>\n          <p>{element.strCategory}</p>\n        </div>\n      ))}\n      {console.log('estou no card de recomendados')}\n    </div>\n\n  );\n}\n\nexport default RecomendationCards;\n\nRecomendationCards.propTypes = {\n  type: PropTypes.string,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}