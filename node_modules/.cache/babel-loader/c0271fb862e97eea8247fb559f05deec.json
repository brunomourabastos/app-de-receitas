{"ast":null,"code":"var _jsxFileName = \"/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/cards/FavoriteCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ShareIcon from '../images/shareIcon.svg';\nimport BlackHeartIcon from '../images/blackHeartIcon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FavoriteCard(_ref) {\n  _s();\n\n  let {\n    recipe\n  } = _ref;\n  const [linkCopied, setLinkCopied] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: recipe.map((element, index) => {\n      if (element.type === 'food') {\n        const removeFromFavorite = () => {\n          const recipeList = JSON.parse(localStorage.getItem('favoriteRecipes'));\n          const newList = recipeList.filter(item => item.id !== element.id);\n          localStorage.setItem('favoriteRecipes', JSON.stringify(newList));\n          window.location.reload();\n        };\n\n        const copyToClipboard = async () => {\n          await navigator.clipboard.writeText(`http://localhost:3000/foods/${element.id}`);\n          setLinkCopied(true);\n        };\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `foods/${element.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              \"data-testid\": `${index}-horizontal-image`,\n              width: 100,\n              src: element.image,\n              alt: element.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": `${index}-horizontal-top-text`,\n            children: `${element.nationality} - ${element.category}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            \"data-testid\": `${index}-horizontal-name`,\n            children: element.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), linkCopied ? 'Link copied!' : '', /*#__PURE__*/_jsxDEV(\"input\", {\n            \"data-testid\": `${index}-horizontal-share-btn`,\n            onClick: copyToClipboard,\n            type: \"image\",\n            src: ShareIcon,\n            alt: \"\\xEDcone de compartilhamento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            \"data-testid\": `${index}-horizontal-favorite-btn`,\n            onClick: removeFromFavorite,\n            type: \"image\",\n            src: BlackHeartIcon,\n            alt: \"iconde de cora\\xE7\\xE3o preenchido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this);\n      }\n\n      const removeFromFavorite = () => {\n        const recipeList = JSON.parse(localStorage.getItem('favoriteRecipes'));\n        const newListDrink = recipeList.filter(item => item.id !== element.id);\n        localStorage.setItem('favoriteRecipes', JSON.stringify(newListDrink));\n        window.location.reload();\n      };\n\n      const copyToClipboard = async () => {\n        await navigator.clipboard.writeText(`http://localhost:3000/drinks/${element.id}`);\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `drinks/${element.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            \"data-testid\": `${index}-horizontal-image`,\n            width: 100,\n            src: element.image,\n            alt: element.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": `${index}-horizontal-top-text`,\n          children: `${element.alcoholicOrNot}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          \"data-testid\": `${index}-horizontal-name`,\n          children: element.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-testid\": `${index}-horizontal-share-btn`,\n          onClick: copyToClipboard,\n          type: \"image\",\n          src: ShareIcon,\n          alt: \"\\xEDcone de compartilhamento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-testid\": `${index}-horizontal-favorite-btn`,\n          onClick: removeFromFavorite,\n          type: \"image\",\n          src: BlackHeartIcon,\n          alt: \"iconde de cora\\xE7\\xE3o preenchido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FavoriteCard, \"H+gtDP/na+G5VzF5PS9tbsuHG/8=\");\n\n_c = FavoriteCard;\nexport default FavoriteCard;\nFavoriteCard.propTypes = {\n  needRender: PropTypes.bool\n}.isRequired;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoriteCard\");","map":{"version":3,"sources":["/Users/brunobastos/bruno/projetos-trybe/sd-019-c-project-recipes-app/sd-019-c-project-recipes-app/src/cards/FavoriteCard.jsx"],"names":["React","useState","Link","PropTypes","ShareIcon","BlackHeartIcon","FavoriteCard","recipe","linkCopied","setLinkCopied","map","element","index","type","removeFromFavorite","recipeList","JSON","parse","localStorage","getItem","newList","filter","item","id","setItem","stringify","window","location","reload","copyToClipboard","navigator","clipboard","writeText","image","name","nationality","category","newListDrink","alcoholicOrNot","propTypes","needRender","bool","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ShareIcon from '../images/shareIcon.svg';\nimport BlackHeartIcon from '../images/blackHeartIcon.svg';\n\nfunction FavoriteCard({ recipe }) {\n  const [linkCopied, setLinkCopied] = useState(false);\n  return (\n    <div>\n      {recipe.map((element, index) => {\n        if (element.type === 'food') {\n          const removeFromFavorite = () => {\n            const recipeList = JSON.parse(localStorage.getItem('favoriteRecipes'));\n            const newList = recipeList.filter((item) => item.id !== element.id);\n            localStorage.setItem('favoriteRecipes', JSON.stringify(newList));\n            window.location.reload();\n          };\n          const copyToClipboard = async () => {\n            await navigator.clipboard.writeText(`http://localhost:3000/foods/${element.id}`);\n            setLinkCopied(true);\n          };\n          return (\n            <div key={ index }>\n              <Link to={ `foods/${element.id}` }>\n                <img\n                  data-testid={ `${index}-horizontal-image` }\n                  width={ 100 }\n                  src={ element.image }\n                  alt={ element.name }\n                />\n              </Link>\n              <p\n                data-testid={ `${index}-horizontal-top-text` }\n              >\n                {`${element.nationality} - ${element.category}`}\n              </p>\n              <h3\n                data-testid={ `${index}-horizontal-name` }\n              >\n                {element.name}\n\n              </h3>\n              {linkCopied ? 'Link copied!' : ''}\n              <input\n                data-testid={ `${index}-horizontal-share-btn` }\n                onClick={ copyToClipboard }\n                type=\"image\"\n                src={ ShareIcon }\n                alt=\"ícone de compartilhamento\"\n              />\n              <input\n                data-testid={ `${index}-horizontal-favorite-btn` }\n                onClick={ removeFromFavorite }\n                type=\"image\"\n                src={ BlackHeartIcon }\n                alt=\"iconde de coração preenchido\"\n              />\n            </div>);\n        }\n        const removeFromFavorite = () => {\n          const recipeList = JSON.parse(localStorage.getItem('favoriteRecipes'));\n          const newListDrink = recipeList.filter((item) => item.id !== element.id);\n          localStorage.setItem('favoriteRecipes', JSON.stringify(newListDrink));\n          window.location.reload();\n        };\n        const copyToClipboard = async () => {\n          await navigator.clipboard.writeText(`http://localhost:3000/drinks/${element.id}`);\n        };\n        return (\n          <div key={ index }>\n            <Link to={ `drinks/${element.id}` }>\n              <img\n                data-testid={ `${index}-horizontal-image` }\n                width={ 100 }\n                src={ element.image }\n                alt={ element.name }\n              />\n            </Link>\n            <p\n              data-testid={ `${index}-horizontal-top-text` }\n            >\n              {`${element.alcoholicOrNot}`}\n            </p>\n            <h3\n              data-testid={ `${index}-horizontal-name` }\n            >\n              {element.name}\n            </h3>\n            <input\n              data-testid={ `${index}-horizontal-share-btn` }\n              onClick={ copyToClipboard }\n              type=\"image\"\n              src={ ShareIcon }\n              alt=\"ícone de compartilhamento\"\n            />\n            <input\n              data-testid={ `${index}-horizontal-favorite-btn` }\n              onClick={ removeFromFavorite }\n              type=\"image\"\n              src={ BlackHeartIcon }\n              alt=\"iconde de coração preenchido\"\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FavoriteCard;\nFavoriteCard.propTypes = {\n  needRender: PropTypes.bool,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}